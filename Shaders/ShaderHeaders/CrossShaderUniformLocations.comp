/*------------------------------------------------------------------------------------------------
Description:
    Similar to SsboBufferBindings.comp, this file was created because there are some uniforms 
    that need to be frequently used in multiple shaders, and it gets to be a hassle looking up 
    all the uniform locations in all the shaders that they appear, plus there is the coupling of 
    having to lug around a string of the uniform names, and I don't want to do that.  Particle 
    collision handling, for example, should not have to know the exact name of any of the 
    uniforms that specify buffer size or anything else.
    
    Constant uniforms like buffer sizes can be set in derived versions of 
    SsboBase::ConfigureConstantUniforms(...), but uniforms that need to be set at runtime like 
    read/write buffer offsets for double-sized buffers are easiest to deal with if they have a 
    predefined uniform location. 

    Uniform locations that do not have predefined locations will not generate conflicting 
    locations with those that do.  This is part of GLSL compilation.
Creator:    John Cox, 7/2017
------------------------------------------------------------------------------------------------*/

//// ParticleBuffer.comp
//#define UNIFORM_LOCATION_MAX_NUM_PARTICLES 0
//
//// ParticlePropertiesBuffer.comp
//#define UNIFORM_LOCATION_NUM_PARTICLE_PROPERTIES 1
//

// ParticleSortingDataBuffer.comp
#define UNIFORM_LOCATION_PARTICLE_SORTING_DATA_BUFFER_READ_OFFSET 3
#define UNIFORM_LOCATION_PARTICLE_SORTING_DATA_BUFFER_WRITE_OFFSET 4

//
//// ParticlePrefixScanBuffer.comp, GeometryPrefixScanBuffer.comp
//#define UNIFORM_LOCATION_PARTICLE_ALL_PREFIX_SUMS_SIZE 5
//#define UNIFORM_LOCATION_GEOMETRY_ALL_PREFIX_SUMS_SIZE 5
//

// PrefixScanStage1.comp, SortSortingDataWithPrefixSums.comp
#define UNIFORM_LOCATION_BIT_NUMBER 6

//
//// ParticleUpdate.comp; PositiontoMortonCode.comp
//#define UNIFORM_LOCATION_PARTICLE_REGION_ORIGIN_X 9
//#define UNIFORM_LOCATION_PARTICLE_REGION_ORIGIN_Y 10
//#define UNIFORM_LOCATION_PARTICLE_REGION_ORIGIN_Z 11
//#define UNIFORM_LOCATION_PARTICLE_REGION_RANGE_X 12
//#define UNIFORM_LOCATION_PARTICLE_REGION_RANGE_Y 13
//#define UNIFORM_LOCATION_PARTICLE_REGION_RANGE_Z 14
//
//// BVH node buffers for particles and for geometry
//#define UNIFORM_LOCATION_PARTICLE_BVH_NUMBER_LEAVES 15
//#define UNIFORM_LOCATION_PARTICLE_BVH_NUMBER_INTERNAL_NODES 16
//#define UNIFORM_LOCATION_PARTICLE_BVH_NODE_BUFFER_SIZE 17
//#define UNIFORM_LOCATION_GEOMETRY_BVH_NUMBER_LEAVES 18
//#define UNIFORM_LOCATION_GEOMETRY_BVH_NUMBER_INTERNAL_NODES 19
//#define UNIFORM_LOCATION_GEOMETRY_BVH_NODE_BUFFER_SIZE 20
//
//// particle collisions detection and viewing the results
//#define UNIFORM_LOCATION_PARTICLE_POTENTIAL_COLLISIONS_BUFFER_SIZE 18
//#define UNIFORM_LOCATION_PARTICLE_VELOCITY_VECTOR_GEOMETRY_BUFFER_SIZE 19
//#define UNIFORM_LOCATION_PARTICLE_BOUNDING_BOX_GEOMETRY_BUFFER_SIZE 20
//
//// CollidableGeometryBuffer.comp
//#define UNIFORM_LOCATION_MAX_COLLIDEABLE_POLYGONS 21
